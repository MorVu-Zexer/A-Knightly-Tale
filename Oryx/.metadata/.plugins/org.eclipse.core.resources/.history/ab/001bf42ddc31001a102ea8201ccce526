package objects;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;

public class Odin {
	
//	Variables
	
	AttackList attack = new AttackList();

	private Point coordinates;
	private int w, h;
	
	private int health = 1380;
	
	private boolean attacking;
	
	private int animationTimer;
	
	private BufferedImage[] odinIdle = new BufferedImage[6];
	private BufferedImage[] odinAttack = new BufferedImage[13];
	
	private Image odin;
	
//	Constructor
	
	public Odin(int x, int y, int w, int h){
		coordinates = new Point(x, y);
		this.w = w;
		this.h = h;
		bufferImages();
		odin = odinIdle[0];
	}
	
//	Methods
	
	public void bufferImages() {
		for(int i = 0; i < odinIdle.length; i++) {
			try {
			    odinIdle[i] = ImageIO.read(new File("src/images/Odin"+(i+1)+".png"));
			} catch (IOException e) { 
			}
		}
		for(int i = 0; i < odinAttack.length; i++) {
			try {
			    odinAttack[i] = ImageIO.read(new File("src/images/Odin"+(i+1)+".png"));
			} catch (IOException e) { 
			}
		}
	}	
	
	public void removeBullets(ArrayList<BossBullet> bullet) {
		for (int i = 0; i < bullet.size(); i++) {
            if (bullet.get(i).getX() < 10 - bullet.get(i).getW() || bullet.get(i).getY() < 10 - bullet.get(i).getH() ||
            		bullet.get(i).getX() > 700 || bullet.get(i).getY() > 741) {
            	bullet.remove(i);
            }
		}
	}
	
	public void attack(ArrayList<BossBullet> bullets) {
		for (int i = 0; i < bullets.size(); i++) {
//			bullets.get(i).move();		
		}
		attack.flower(bullets, getX() + (getW()/2), getY() + (getH()/2));
	}
	
	public void hit(ArrayList<PlayerBullet> bullets) {
		for(int i = 0; i < bullets.size(); i++) {
			if (bullets.get(i).getX() + bullets.get(i).getW() > getX() && bullets.get(i).getY() + bullets.get(i).getH() > getY()
					&& getX() + getW() > bullets.get(i).getX() && getY() + getH() > bullets.get(i).getY()) {
				bullets.remove(i);
				health -= 1;
			}
		}
	}
	
	public void draw(Graphics g) {
		idleAnimation();
		g.drawImage(odin, getX(), getY(), getW(), getH(), null);
		drawHealth(20, 20, 690, 10, g);
	}
	
	public void drawBullets(ArrayList<BossBullet> bullets, Graphics g, Graphics2D g2d) {
		for(int i = 0; i < bullets.size(); i++) {
			bullets.get(i).draw(g, g2d);
		}
	}
	
	public void idleAnimation() {
		animationTimer++;
		if (animationTimer <= 10) {
			odin = odinIdle[0];
		} else if (animationTimer <= 10*2) {
			odin = odinIdle[1];
		} else if (animationTimer <= 10*3) {
			odin = odinIdle[2];
		} else if (animationTimer <= 10*4) {
			odin = odinIdle[3];
		} else if (animationTimer <= 10*5) {
			odin = odinIdle[4];
		} else if (animationTimer <= 10*6) {
			odin = odinIdle[5];
		} else 
			animationTimer = 0;
	}
	
	public void drawHealth(int x, int y, int w, int h, Graphics g) {
		g.setColor(Color.RED);
		g.fillRect(x, y, health/2, h);
		g.setColor(Color.ORANGE);
		g.fillRect(x, y, 69, h);
		g.setColor(Color.WHITE);
		g.drawRect(x, y, w, h);
	}
	
	
//	Getters
	
	public int getX() {
		return coordinates.getX();
	}
	
	public int getY() {
		return coordinates.getY();
	}
	
	public int getW() {
		return w;
	}
	
	public int getH() {
		return h;
	}
	
//	Setters

	public void setX(int x) {
		coordinates.setX(x);
	}
	
	public void setY(int y) {
		coordinates.setY(y);
	}
	
	public void setW(int w) {
		this.w = w;
	}
	
	public void setH(int h) {
		this.h = h;
	}
	
}
